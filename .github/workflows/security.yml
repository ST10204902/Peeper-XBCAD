name: Security Scan

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  schedule:
    - cron: "0 0 * * 0"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  security-events: write
  actions: read
  contents: read
  pull-requests: read

jobs:
  setup:
    uses: ./.github/workflows/shared-config.yml
    with:
      artifact-name: security-deps

  visibility-check:
    runs-on: ubuntu-latest
    outputs:
      is_private: ${{ steps.check.outputs.is_private }}
    steps:
      - id: check
        run: |
          echo "is_private=${{ github.event.repository.private }}" >> $GITHUB_OUTPUT

  security:
    needs: [setup, visibility-check]
    if: needs.visibility-check.outputs.is_private != 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        check: ['codeql-js', 'codeql-ts', 'npm-audit', 'dependency-check']
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --prefer-offline
          npm cache verify

      - name: Initialize CodeQL
        if: startsWith(matrix.check, 'codeql')
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ endsWith(matrix.check, '-js') && 'javascript' || 'typescript' }}

      - name: Run CodeQL Analysis
        if: startsWith(matrix.check, 'codeql')
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ endsWith(matrix.check, '-js') && 'javascript' || 'typescript' }}"

      - name: Run npm audit
        if: matrix.check == 'npm-audit'
        run: |
          echo "Running production dependencies audit..."
          npm audit --production --audit-level=critical || echo "Production audit found issues"
          
          echo "Running development dependencies audit..."
          npm audit --audit-level=critical || echo "Development audit found issues"
          
          # Create audit report
          npm audit --json > npm-audit.json || true

      - name: Run OWASP Dependency Check
        if: matrix.check == 'dependency-check'
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "Peeper-XBCAD"
          path: "."
          format: "HTML"
          out: "reports"
          args: >
            --failOnCVSS 9
            --suppression suppression.xml
            --exclude "**/*.test.ts"
            --exclude "**/*.test.tsx"
            --exclude "**/node_modules/**"

      - name: Upload Security Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-results-${{ matrix.check }}
          path: |
            reports
            results
            npm-audit.json
          retention-days: 7

      - name: Check for Critical Vulnerabilities
        if: matrix.check == 'npm-audit'
        run: |
          if grep -q '"level":"critical"' npm-audit.json; then
            echo "Critical vulnerabilities found in production dependencies!!!"
            exit 1
          fi
